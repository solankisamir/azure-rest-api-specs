{
  "swagger": "2.0",
  "info": {
    "title": "ApiManagementClient",
    "description": "Use these REST APIs for performing operations on Issue entity in your Azure API Management deployment. Issues can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Issue](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-Issues).",
    "version": "2017-03-01"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "security": [
    {
      "azure_auth": [
        "user_impersonation"
      ]
    }
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow.",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues": {
      "get": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issue_ListByService",
        "description": "Lists a collection of all Issues in the specified service instance.",
        "x-ms-examples": {
          "ApiManagementListIssues": {
            "$ref": "./examples/ApiManagementListIssues.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "| Field          | Supported operators    | Supported functions                         |\n|----------------|------------------------|---------------------------------------------|\n| id             | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| subject        | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| thumbprint     | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith |\n| expirationDate | ge, le, eq, ne, gt, lt | N/A                                         |"
          },
          {
            "$ref": "./apimanagement.json#/parameters/TopQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SkipQueryParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a collection of Issue entity.",
            "schema": {
              "$ref": "#/definitions/IssueCollection"
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-odata": "#/definitions/IssueContract"
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/issues/{issueId}": {
      "get": {
        "tags": [
          "Issues"
        ],
        "operationId": "Issue_Get",
        "description": "Gets the details of the Issue specified by its identifier.",
        "x-ms-examples": {
          "ApiManagementGetIssue": {
            "$ref": "./examples/ApiManagementGetIssue.json"
          }
        },
        "parameters": [
          {
            "$ref": "./apimanagement.json#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ServiceNameParameter"
          },
          {
            "$ref": "#/parameters/IssueIdParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "./apimanagement.json#/parameters/SubscriptionIdParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The response body contains the specified Issue entity.",
            "schema": {
              "$ref": "#/definitions/IssueContract"
            },
            "headers": {
              "ETag": {
                "description": "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response describing why the operation failed.",
            "schema": {
              "$ref": "./apimanagement.json#/definitions/ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "IssueCollection": {
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueContract"
          },
          "description": "Page values."
        },
        "nextLink": {
          "type": "string",
          "description": "Next page link if any."
        }
      },
      "description": "Paged Issues list representation."
    },
    "IssueContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueContractProperties",
          "description": "Issue properties details."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Issue details."
    },
    "IssueContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Issue Title."
        },
        "description": {
          "type": "string",
          "description": "Issue Description."
        },
        "reportedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Issue Reported date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "authorId": {
          "type": "string",
          "description": "Issue Author Id. This is the id from /users/{uid}."
        },
        "authorName": {
          "type": "string",
          "description": "Issue Author Name."
        },
        "apiId": {
          "type": "string",
          "description": "Api endpoint Id."
        },
        "state": {
          "type": "string",
          "enum": [
            "proposed",
            "open",
            "removed",
            "closed"
          ],
          "x-ms-enum": {
            "name": "IssueStateType",
            "modelAsString": false
          },
          "description": "Issue State Type identifier."
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentContractProperties"
          },
          "description": "Array of Attachment responses."
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommentContractProperties"
          },
          "description": "Array of Comment responses."
        }
      },
      "required": [
        "subject",
        "thumbprint",
        "expirationDate"
      ],
      "description": "Properties of the Issue contract."
    },
    "AttachmentContractProperties": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Attachment Title."
        },
        "contentType": {
          "type": "string",
          "description": "Attachment Content Type."
        },
        "uniqueId": {
          "type": "string",
          "description": "Attachment Unique identifier."
        }
      },
      "description": "Attachment Contract Properties."
    },
    "CommentContract": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/CommentContractProperties",
          "description": "Comment properties details."
        }
      },
      "allOf": [
        {
          "$ref": "./apimanagement.json#/definitions/Resource"
        }
      ],
      "description": "Issue details."
    },
    "CommentContractProperties": {
      "properties": {
        "text": {
          "type": "string",
          "description": "Coment Text."
        },
        "postedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Comment posted date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.\n"
        },
        "authorId": {
          "type": "string",
          "description": "Comment Author Id. This is the id from /users/{uid}."
        },
        "authorName": {
          "type": "string",
          "description": "Comment Author Name."
        }
      },
      "description": "Comment Contract Properties."
    },
    "IssueCreateOrUpdateParameters": {
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "$ref": "#/definitions/IssueCreateOrUpdateProperties",
          "description": "Issue create or update properties details."
        }
      },
      "description": "Issue create or update details."
    },
    "IssueCreateOrUpdateProperties": {
      "properties": {
        "data": {
          "type": "string",
          "description": "Base 64 encoded Issue using the application/x-pkcs12 representation."
        },
        "password": {
          "type": "string",
          "description": "Password for the Issue"
        }
      },
      "required": [
        "data",
        "password"
      ],
      "description": "Parameters supplied to the CreateOrUpdate Issue operation."
    }
  },
  "parameters": {
    "IssueIdParameter": {
      "name": "issueId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the Issue entity. Must be unique in the current API Management service instance.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "CommentIdParameter": {
      "name": "commentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the comment associated with an issue entity.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    },
    "AttachmentIdParameter": {
      "name": "attachmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Identifier of the Attachment associated with an issue entity.",
      "minLength": 1,
      "maxLength": 256,
      "pattern": "^[^*#&+:<>?]+$",
      "x-ms-parameter-location": "method"
    }
  }
}